---
title: "Research"
date: last-modified
date-format: "MM/DD/YYYY"
author:
  - name: Seungju Kim
    orcid: 0009-0009-5166-9170
    email: seungju7@illinois.edu
    affiliation: 
      - name: University of Illinois, Urbana-Champaign
        department: Psychology
title-block-banner: false
format:
  html:
    include-in-header:
      - text: |
          <!-- Google Tag Manager -->
          <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-T937Z8W5');</script>
          <!-- End Google Tag Manager -->
    include-after-body:
      - text: |
          <!-- Google Tag Manager (noscript) -->
          <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-T937Z8W5"
          height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
          <!-- End Google Tag Manager (noscript) -->
comments: false
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| include: FALSE
# Required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(scholar, rcrossref, dplyr, stringr, htmltools)
```




<a href="https://docs.google.com/document/d/1bB2WnhJIigiq-S9CmZNKPpmEYytFz98U/export?format=pdf" 
   class="btn btn-success" 
   target="_blank"
   id="cv-download-button"
   data-tracking="cv-download">
    <i class="bi bi-file-earmark-pdf"></i> Download CV
</a>

:::callout-note
All publications/preprints are free to access. To view or download a file, please see my ResearchGate profile. 
:::





```{r results = "asis"}
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| results: "asis"

# Function to get publications with DOIs
get_all_pubs_with_doi <- function(scholar_id) {
    # Get publications from Google Scholar
    pubs <- get_publications(scholar_id)
    
    # Create a function to safely search for DOI
    safe_get_doi <- function(title) {
        Sys.sleep(1) # Rate limiting to be nice to the API
        tryCatch({
            result <- cr_works(query = title)$data
            if(nrow(result) > 0) {
                return(result$doi[1])
            }
            return(NA)
        }, error = function(e) {
            return(NA)
        })
    }
    
    # Add DOIs to the publications
    pubs$doi <- sapply(pubs$title, safe_get_doi)
    
    return(pubs)
}

# Function to check if publication is a preprint
is_preprint <- function(pub) {
    if (is.na(pub$journal) && is.na(pub$doi)) {
        return(FALSE)
    }
    return(grepl("OSF", pub$journal, ignore.case = TRUE) || 
           grepl("OSF", pub$doi, ignore.case = TRUE))
}


# Function to format a single citation row
format_citation_row <- function(pub, number) {
    # Format authors
    authors <- strsplit(pub$author, ", ")[[1]]
    author_text <- paste(authors, collapse = ", ")
    
    # Bold "S Kim" in the author list
    author_text <- gsub("S Kim", "<strong>S Kim</strong>", author_text)
    
    # Create base citation HTML
    base_citation <- paste0(
        number, ". ",  # Add the numbering
        author_text,
        ". (",
        pub$year,
        "). ",
        pub$title,
        ". <i>",
        pub$journal,
        "</i>"
    )
    
    # Add DOI link if exists
    if(!is.na(pub$doi)) {
        base_citation <- paste0(
            base_citation,
            sprintf(
                '. <a href="https://doi.org/%s">https://doi.org/%s</a>',
                pub$doi,
                pub$doi
            )
        )
    }
    
    # Start building the table row with proper indentation
    row_html <- paste0(
        '<tr>',
        '<td style="padding: 10px; width: 100%;">',  # Full width for citation
        '<div style="text-indent: -1.5em; padding-left: 1.5em;">',  # Indentation
        base_citation,
        '</div>',
        '</td>'
    )
    
    # Add Dimensions badge with horizontal centering
    if(!is.na(pub$doi)) {
        row_html <- paste0(
            row_html,
            '<td style="padding: 10px; width: 40px; text-align: center;">',  # Smaller width, centered badge
            '<div style="display: flex; justify-content: center;">',
            sprintf(
                '<span class="__dimensions_badge_embed__" data-doi="%s" data-style="small_circle" data-legend="hover-right"></span>',
                pub$doi
            ),
            '</div>',
            '</td>'
        )
    } else {
        row_html <- paste0(row_html, '<td style="width: 60px;"></td>')
    }
    
    # Add Altmetric badge with horizontal centering
    if(!is.na(pub$doi)) {
        row_html <- paste0(
            row_html,
            '<td style="padding: 10px; width: 40px; text-align: center;">',  # Smaller width, centered badge
            '<div style="display: flex; justify-content: center;">',
            sprintf(
                '<div style="background-color: white; display: inline-block; border-radius: 50%%; width: 48px; height: 48px; display: flex; align-items: center; justify-content: center; transform: scale(0.92);"><div class="altmetric-embed" data-badge-type="donut" data-badge-popover="right" data-doi="%s"></div></div>',
                pub$doi
            ),
            '</div>',
            '</td>'
        )
    } else {
        row_html <- paste0(row_html, '<td style="width: 60px;"></td>')
    }
    
    # Close the row
    row_html <- paste0(row_html, '</tr>')
    
    return(row_html)
}

# Main function to generate publication list
generate_publication_html <- function(scholar_id) {
    # Get publications
    pubs <- get_all_pubs_with_doi(scholar_id)
    
    # Sort publications by year (ascending) and cites (descending) initially
    pubs <- pubs[order(pubs$year, -pubs$cites),]
    
    # Split into publications and preprints
    preprints <- pubs[sapply(split(pubs, 1:nrow(pubs)), is_preprint), ]
    publications <- pubs[!sapply(split(pubs, 1:nrow(pubs)), is_preprint), ]
    
    # Reverse order for display (newer on top)
    if(nrow(publications) > 0) {
        publications <- publications[nrow(publications):1, ]
    }
    if(nrow(preprints) > 0) {
        preprints <- preprints[nrow(preprints):1, ]
    }
    
    # Generate HTML fragments using htmltools
    html <- tagList(
        tags$script(src = "https://badge.dimensions.ai/badge.js", async = TRUE, charset = "utf-8"),
        tags$script(src = "https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js", async = TRUE, charset = "utf-8"),
        tags$style("
            table {
                width: 100%;
                border-collapse: collapse;
                table-layout: fixed;  /* Fixed column widths */
            }
            td {
                color: inherit;
                overflow-wrap: break-word;  /* Better text wrapping */
                vertical-align: middle;     /* Vertical centering */
            }
            tr {
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            }
            /* Center badge containers */
            td span.__dimensions_badge_embed__, 
            td div.altmetric-embed {
                margin: 0 auto;
                display: block;
            }
        ")
    )
    
    # Add publications section if exists
    if(nrow(publications) > 0) {
        publication_rows <- mapply(
            format_citation_row,
            split(publications, 1:nrow(publications)),
            nrow(publications):1,
            SIMPLIFY = FALSE
        )
        html <- tagList(
            html,
            tags$h1("Publications"),
            HTML(paste0('<table>', paste(publication_rows, collapse = "\n"), '</table>'))
        )
    }
    
    # Add preprints section if exists
    if(nrow(preprints) > 0) {
        preprint_rows <- mapply(
            format_citation_row,
            split(preprints, 1:nrow(preprints)),
            nrow(preprints):1,
            SIMPLIFY = FALSE
        )
        html <- tagList(
            html,
            tags$h1("Preprints"),
            HTML(paste0('<table>', paste(preprint_rows, collapse = "\n"), '</table>'))
        )
    }
    
    return(html)
}

# Run the generation and render HTML
scholar_id <- "JWNJV9UAAAAJ"
html_content <- generate_publication_html(scholar_id)
html_content
```
